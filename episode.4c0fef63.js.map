{"mappings":"YAEA,IAAMA,EAAUC,SAASC,cAAe,SAClCC,EAA0BF,SAASC,cACtC,4BAEGE,EAAeH,SAASC,cAAe,kBAE7CF,EAAQK,iBAAkB,UAG1B,SAAyBC,GACvBA,EAAMC,kBCZqBC,EDcLF,EAAMG,OAAOC,SAASC,MAAMC,MCb3CC,MAAM,2CAAkDC,OAAPN,IAAUO,MAChE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,KDWjBL,MAAK,SAAAM,GAOV,IAAsCC,KANHD,GAMKE,KAAFD,EAAQE,WACjBC,KAAI,SAAAC,GAC7B,OAAOb,MAAM,GAAaC,OAAVY,IACbX,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,IAEjBL,MAAK,SAAAY,IAeZ,SAAwCL,G,IAAEM,EAAFN,EAAEM,MAAOC,EAATP,EAASO,OAAQN,EAAjBD,EAAiBC,KAAMO,EAAvBR,EAAuBQ,SACvDC,EAAS,mDAAkEjB,OAAfc,EAAM,WAC3Bd,OADoCS,EAAK,0GAEhCT,OADTS,EAAK,iEAEQT,OADJe,EAAO,oEAG9Cf,OAF2CkB,OAAOC,OAC3DH,EAASP,MACTW,KAAM,IAAG,cACf9B,EAAa+B,mBAAmB,aAAcJ,E,CArBxCK,CAA+BT,E,IAEhCU,OAAM,SAAAC,G,OAASA,C,OAItB,SAA0BhB,G,IAAAC,EAAAD,EAAEC,KAmB1BpB,EAAwBoC,UAAY,GAhBpC,IAAMR,EAAS,mDAAwDjB,OAALS,EAAK,mFAEvEpB,EAAwBgC,mBAAmB,aAAcJ,E,CA1BrDS,CAAiBnB,E,IAElBgB,OAAM,SAAAC,G,OAASA,C,ICrBb,IAAsB9B,C,IDS7BR,EAAQK,iBAAkB,UAqD1B,WACED,EAAamC,UAAY,E","sources":["src/js/episode.js","src/js/fetchEpisode.js"],"sourcesContent":["import { fetchEpisode } from './fetchEpisode';\n\nconst formRef = document.querySelector(`.form`);\nconst episodeNameContainerRef = document.querySelector(\n  `.location-name-container`\n);\nconst residentCard = document.querySelector(`.resident-card`);\n\nformRef.addEventListener(`submit`, onChooseEpisode);\nformRef.addEventListener(`submit`, onDeleteCards);\n\nfunction onChooseEpisode(event) {\n  event.preventDefault();\n\n  const numberEpisode = event.target.elements.input.value;\n\n  fetchEpisode(numberEpisode)\n    .then(episode => {\n      onReturnResidentsFromEpisode(episode);\n      onCreateMarkupH1(episode);\n    })\n    .catch(error => error);\n}\n\nfunction onReturnResidentsFromEpisode({ name, characters }) {\n  let character = characters.map(character => {\n    return fetch(`${character}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then(data => {\n        onCreateMarkupForResidentsCard(data);\n      })\n      .catch(error => error);\n  });\n}\n\nfunction onCreateMarkupH1({ name }) {\n  onDeleteMarkupH1();\n\n  const markup = `<h3 class=\"location-name\"><b>Name Location: </b>${name}</h3>\n  <h4 style=\"text-align: center;\"><b>Characters in this episode</b></h4>`;\n  episodeNameContainerRef.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction onCreateMarkupForResidentsCard({ image, gender, name, location }) {\n  const markup = `<div class=\"resident-card__container\"><img src=\"${image}\" alt=\"${name}\" class=\"resident-card__img\" width=\"250\" hight=\"250\" />\n      <h3 class=\"resident-card__name\"><b></b>${name}</h3>\n      <p class=\"resident-card__gender\"><b>Gender: </b>${gender}</p>\n      <p class=\"resident-card__location\"><b>Location: </b>${Object.values(\n        location.name\n      ).join(``)}</p></div>`;\n  residentCard.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction onDeleteMarkupH1() {\n  episodeNameContainerRef.innerHTML = '';\n}\n\nfunction onDeleteCards() {\n  residentCard.innerHTML = '';\n}\n","export function fetchEpisode(number) {\n  return fetch(`https://rickandmortyapi.com/api/episode/${number}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n"],"names":["$ff219919c94e44e7$var$formRef","document","querySelector","$ff219919c94e44e7$var$episodeNameContainerRef","$ff219919c94e44e7$var$residentCard","addEventListener","event","preventDefault","number","target","elements","input","value","fetch","concat","then","response","ok","Error","status","json","episode","param","name","characters","map","character","data","image","gender","location","markup","Object","values","join","insertAdjacentHTML","$ff219919c94e44e7$var$onCreateMarkupForResidentsCard","catch","error","innerHTML","$ff219919c94e44e7$var$onCreateMarkupH1"],"version":3,"file":"episode.4c0fef63.js.map"}